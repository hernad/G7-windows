FROM debian:jessie

ENV DEBIAN_FRONTEND noninteractive

RUN dpkg --add-architecture i386
RUN sed -i "s/main/main contrib non-free/" etc/apt/sources.list
RUN apt-get update && apt-get install -yq wine curl unrar unzip

# innosetup
RUN mkdir innosetup && \
    cd innosetup && \
    curl -fsSL -o innounp045.rar "https://downloads.sourceforge.net/project/innounp/innounp/innounp%200.45/innounp045.rar?r=&ts=1439566551&use_mirror=skylineservers" && \
    unrar e innounp045.rar

RUN cd innosetup && \
    curl -fsSL -o is-unicode.exe http://files.jrsoftware.org/is/5/isetup-5.5.8-unicode.exe && \
    wine "./innounp.exe" -e "is-unicode.exe"


ENV DOCKER_VERSION 17.04.0-ce
#ENV ARCH x86_64
ENV ARCH i386


#ENV DOCKER_MACHINE_VERSION 0.10.0
#ENV DOCKER_COMPOSE_VERSION 1.11.2


# 5.0.x works on Windows XP
ENV VIRTUALBOX_VERSION 5.0.36
ENV VIRTUALBOX_REVISION 114008

#ENV GIT_VERSION 2.12.0
# Git 2.10.0 is the last version compatible with Windows XP
ENV GIT_VERSION 2.10.0
ENV GIT_ARCH 32

RUN mkdir /bundle

WORKDIR /bundle

# Change this to 'test.docker.com' for RCs and 'get.docker.com' for official
# releases.
ENV DOCKER_ENDPOINT get.docker.com

RUN curl -fsSL -o dockerbins.zip "https://${DOCKER_ENDPOINT}/builds/Windows/${ARCH}/docker-${DOCKER_VERSION}.zip" && \
    unzip dockerbins.zip && \
    mv docker/docker.exe . && \
    rm -r docker/ dockerbins.zip

#RUN curl -fsSL -o docker-machine.exe "https://github.com/docker/machine/releases/download/v$DOCKER_MACHINE_VERSION/docker-machine-Windows-x86_64.exe"
#RUN curl -fsSL -o docker-compose.exe "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-Windows-x86_64.exe"


#RUN curl -fsSL -o Git.exe "https://github.com/git-for-windows/git/releases/download/v$GIT_VERSION.windows.1/Git-$GIT_VERSION-64-bit.exe"
RUN curl -fsSL -o Git.exe "https://github.com/git-for-windows/git/releases/download/v$GIT_VERSION.windows.1/Git-$GIT_VERSION-${GIT_ARCH}-bit.exe"

RUN curl -fsSL -o virtualbox.exe "http://download.virtualbox.org/virtualbox/$VIRTUALBOX_VERSION/VirtualBox-$VIRTUALBOX_VERSION-$VIRTUALBOX_REVISION-Win.exe" \
	&& echo "$(curl -fsSL 'https://virtualbox.org/download/hashes/'"$VIRTUALBOX_VERSION"'/SHA256SUMS' | awk '$2 ~ /-Win.exe$/ { print $1 }') *virtualbox.exe" | sha256sum -c -

#RUN wine virtualbox.exe -extract -silent -path . && \
#	  rm virtualbox.exe && \
#	  rm *x86.msi && \
#	  mv *_amd64.msi VirtualBox_amd64.msi

# nas interesuje instalacija na 32bitnu masinu
RUN wine virtualbox.exe -extract -silent -path . && \
    	  rm virtualbox.exe && \
    	  rm *_amd64.msi && \
    	  mv *x86.msi VirtualBox.msi


#COPY blobs/vs2013_vcredist_x86.exe /bundle/

#ENV GREENBOX_VERSION 3.6.2
#RUN curl -kfsSL -o greenbox.iso https://download.bring.out.ba/greenbox-${GREENBOX_VERSION}.iso

# G7 installer version
ENV INSTALLER_VERSION 6.1.3
RUN curl -fsSL -o docker-machine.exe "http://download.bring.out.ba/docker-machine-Windows-i386.exe"

# Add installer resources
COPY windows /installer

WORKDIR /installer
RUN rm -rf /tmp/.wine-0/
RUN wine ../innosetup/ISCC.exe G7.iss /DMyAppVersion=$INSTALLER_VERSION
